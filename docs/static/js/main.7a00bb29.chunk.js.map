{"version":3,"sources":["components/AddCategory.js","helpers/GetGifs.js","components/GifGridItems.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","callback","type","value","onChange","target","prototype","ProtoType","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItems","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oNAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,mCACA,sBAAMC,SAZY,SAACC,GACnBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAQ,OAAKP,GAAL,mBAAmBO,OACzCN,EAAc,MAOlB,SACI,uBACIO,KAAK,OACLC,MAAST,EACTU,SApBe,SAACP,GACxBF,EAAcE,EAAEQ,OAAOF,eA0B/BZ,EAAYe,UAAU,CAClBd,cAAee,IAAUC,KAAKC,Y,mCClCrBC,EAAO,uCAAI,WAAMC,GAAN,uBAAAC,EAAA,6DACVC,EADU,0FACgFC,UAAUH,GAD1F,sBAEGI,MAAMF,GAFT,cAEVG,EAFU,gBAGKA,EAAKC,OAHV,uBAGTC,EAHS,EAGTA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAT1B,kBAcTM,GAdS,4CAAJ,sDCCPO,EAAe,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAGrC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAErB,ECJwB,SAACA,GACzB,MAA0BlB,mBAAS,CAC/ByB,KAAK,GACLa,SAAQ,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAmBA,OAdAC,qBAAU,WAENxB,EAAQC,GACHwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAMkB,EACNL,SAAQ,SAItB,CAACpB,IAIIqB,EDhBwBK,CAAa1B,GAAhCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAEpB,OACI,qCACI,oBAAIJ,UAAU,uDAAd,SAAuEhB,IAEtEoB,GAAW,mBAAGJ,UAAU,sDAAb,qBAEZ,qBAAKA,UAAW,WAAhB,SAGQH,EAAOJ,KAAI,SAACC,GAAD,OAEP,aADA,CACC,EAAD,eAEQA,GADGA,EAAIC,aElB1BgB,EAAe,WAGxB,MAAoC7C,mBAAS,CAAC,aAA9C,mBAAO8C,EAAP,KAAmB/C,EAAnB,KAEA,OACI,gCAEI,8CAEA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,uBAGA,6BAEQ+C,EAAWnB,KAAK,SAAAT,GAAQ,OACrB,cAAC,EAAD,CAEKA,SAAYA,GADNA,Y,MCdlC6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7a00bb29.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport ProtoType  from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handlerInputChange = (e) =>{\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handlerSubmit = (e)=>{\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length>2){\r\n            setCategories(callback => [inputValue,...callback]);\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <form onSubmit={handlerSubmit}>    \r\n            <input \r\n                type=\"text\"\r\n                value = {inputValue}\r\n                onChange= {handlerInputChange}\r\n            />\r\n        </form>    \r\n        </>\r\n    )\r\n}\r\n\r\nAddCategory.prototype={\r\n    setCategories: ProtoType.func.isRequired\r\n}\r\n","\r\nexport const getGifs =  async(category)=>{\r\n        const url = `https://api.giphy.com/v1/gifs/search?api_key=GogUBHUJsSN218kqzmvuBCGw6RT2JhGe&q=${ encodeURI(category)}&limit=10`;\r\n        const resp = await fetch(url);\r\n        const {data} = await resp.json();\r\n\r\n        const gifs = data.map (img =>{\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        });\r\n\r\n        \r\n        return gifs;\r\n    } ","import React from 'react'\r\n\r\nexport const GifGridItems = ({id, title, url}) => {\r\n\r\n   \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} ></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { getGifs } from '../helpers/GetGifs';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItems } from './GifGridItems';\r\n\r\nexport const GifGrid = ({category}) => {\r\n    \r\n    const {data:images, loading} = useFetchGifs(category);\r\n    \r\n    return ( \r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn animate__delay-.5s\" >{category}</h3>\r\n\r\n            {loading && <p className=\"animate__animated animate__flash animate__delay-.2s\">loading</p>}\r\n            \r\n            <div className= \"car-grid\">\r\n            \r\n                {\r\n                    images.map((img) =>(\r\n                        //<li key = {img.id}> {img.title} </li>\r\n                        <GifGridItems \r\n                            key = {img.id}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        \r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { getGifs } from '../helpers/GetGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n    useEffect(()=>{\r\n\r\n        getGifs(category)\r\n            .then(imgs =>{\r\n                setState({\r\n                    data: imgs,\r\n                    loading:false\r\n                });\r\n            })\r\n\r\n    },[category])\r\n\r\n    \r\n\r\n    return state;\r\n}\r\n","import React, { useState } from \"react\"\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\nexport const GifExpertApp = () =>{\r\n\r\n\r\n    const [categories, setCategories] = useState(['One Push']);\r\n\r\n    return (\r\n        <div>\r\n            \r\n            <h2>GifExpertApp</h2>\r\n\r\n            <AddCategory setCategories={setCategories}/>\r\n            \r\n            <hr/>\r\n\r\n         \r\n            <ol>\r\n                {\r\n                    categories.map( category => (\r\n                       <GifGrid \r\n                            key ={category}\r\n                            category = {category}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}